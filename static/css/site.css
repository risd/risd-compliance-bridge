@charset "UTF-8";
:root {
  --max-width-site: 1120px;
  --max-width-content: 40em; }

:root {
  --text-color: black;
  --background-color: white;
  --pop-color: #0F74E6;
  --grey: #ddd; }

.ff-sans-serif, html, h1, h2, h3, blockquote, cite, figcaption, td,
th, [data-react-component='Nav'] ul li span {
  font-family: "Gotham SSm A", "Gotham SSm B", "Helvetica Neue", "Helvetica", "Arial", sans-serif; }

.ff-serif, p, ol li,
ul li, [data-react-component='Nav'] header nav div:nth-child(2) > ul > li > ul > li {
  font-family: "Mercury SSm A", "Mercury SSm B", "Georgia", "Times New Roman", "Times", serif; }

.inline-link, a {
  color: var(--text-color);
  border-bottom: 2px solid var(--pop-color);
  transition: color 0.2s ease; }
  .inline-link:hover, a:hover {
    color: var(--pop-color); }

/* --------------------------------------------------------

Remove the unit of a length
@param {Number} $number - Number to remove unit from
@return {Number} - Unitless number

-------------------------------------------------------- */
/* --------------------------------------------------------

Variable Map Lists for the text-size mixin

A specific text-size in this mixin is defined with a font-size and a leading.

For example,
  small: (64px, 72px)
  where small is the media query width defined in the $breakpoints map-list in _responsive.scss,
  64px is the font-size
  72px is the line-height (which will be converted to a unitless value for the browser in the mixin)


The definition of each font-size/leading pair can be different for each media query width.
This is an example of a font size with different definitions for each media query width:
  $medium: (
    base: (12px, 18px),
    small: (14px, 20px),
    medium: (16px, 24px),
    large: (18px, 28px),
    huge: (20px, 32px)
  ) ;
This is generally an unusual situation because it would involve a pretty complicated typography system.


A more common example would be something like this:
  $xlarge: (
    base: (52px, 60px),
    small: (64px, 72px),
    medium: (64px, 72px),
    large: (72px, 80px),
    huge: (72px, 80px)
  ) ;

This definition includes redundant repitition of values, so it can be defined more simply like this:
  $xlarge: (
    base: (52px, 60px),
    small: (64px, 72px),
    large: (72px, 80px)
  ) ;

-------------------------------------------------------- */
/* --------------------------------------------------------
Mixin for font-size and line-height definition
  Usage Example: @include text-size(large);

Font size can take on the following values:
  small, regular, medium, large, xlarge, xxlarge

If the mixin is called and values are not entered, it will default to regular font-size
-------------------------------------------------------- */
@media screen and (min-width: 1px) {
  .fs-1 {
    font-size: 64px;
    line-height: calc(74 / 64); } }

@media screen and (min-width: 1px) {
  .fs-2, [data-react-component='Nav'] ul li span, [data-react-component='Nav'] header nav div:nth-child(2) > ul > li > ul > li {
    font-size: 26px;
    line-height: calc(31 / 26); } }

@media screen and (min-width: 1px) {
  .fs-3 {
    font-size: 24px;
    line-height: calc(34 / 24); } }

@media screen and (min-width: 1px) {
  .fs-4 {
    font-size: 21px;
    line-height: calc(25 / 21); } }

@media screen and (min-width: 1px) {
  .fs-5 {
    font-size: 16px;
    line-height: calc(28 / 16); } }

@media screen and (min-width: 1px) {
  .fs-6 {
    font-size: 14px;
    line-height: calc(20 / 14); } }

@media screen and (min-width: 1px) {
  .fs-7 {
    font-size: 12px;
    line-height: calc(16 / 12); } }

.fw-bold {
  font-weight: bold; }

/* Layout */
body {
  margin: 0;
  text-rendering: optimizeLegibility; }

main {
  display: block; }

/* Text */
html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: inherit; }

pre {
  overflow: auto;
  -webkit-overflow-scrolling: touch; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

small {
  font-size: 0.75em; }

sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 0.75em;
  line-height: 0; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content */
img {
  border: 0; }

/* Forms */
fieldset {
  margin: 0;
  padding: 0;
  border: 0; }

legend {
  padding: 0; }

button,
input,
optgroup,
select,
textarea {
  margin: 0;
  padding: 0;
  bottom: 0;
  color: inherit;
  font-size: inherit;
  -webkit-appearance: none; }

input,
textarea {
  font-family: inherit; }

textarea {
  resize: vertical;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  -webkit-appearance: textfield; }

/* Tables */
table {
  border-collapse: collapse; }

th,
td {
  padding: 0; }

th {
  vertical-align: bottom; }

td {
  vertical-align: top; }

a {
  text-decoration: none;
  color: inherit; }

html {
  color: var(--text-color); }
  @media screen and (min-width: 1px) {
    html {
      font-size: 16px;
      line-height: calc(28 / 16); } }

body {
  color: var(--text-color);
  background-color: var(--background-color);
  width: 100%; }
  @media screen and (min-width: 1px) {
    body {
      font-size: 16px;
      line-height: calc(28 / 16); } }

main {
  position: relative; }

h1 {
  font-weight: bold;
  color: var(--text-color);
  letter-spacing: -0.05em; }
  @media screen and (min-width: 1px) {
    h1 {
      font-size: 64px;
      line-height: calc(74 / 64); } }

h2 {
  font-weight: bold;
  color: var(--text-color);
  letter-spacing: -0.04em; }
  @media screen and (min-width: 1px) {
    h2 {
      font-size: 24px;
      line-height: calc(34 / 24); } }

h3 {
  color: var(--text-color);
  letter-spacing: -0.03em; }
  @media screen and (min-width: 1px) {
    h3 {
      font-size: 26px;
      line-height: calc(31 / 26); } }

h3 + p {
  margin-top: 0.5em; }

h1 + p {
  margin-top: 1rem; }

p {
  color: var(--text-color);
  margin: 0; }
  @media screen and (min-width: 1px) {
    p {
      font-size: 16px;
      line-height: calc(28 / 16); } }
  p:last-child {
    margin-bottom: 0; }

p + p {
  margin-top: 1rem; }

p + h5 {
  margin-top: 1rem; }

a {
  display: inline; }
  p a {
    display: inline; }

strong {
  font-weight: bold; }

i,
em {
  font-style: italic; }

blockquote {
  font-weight: bold;
  color: var(--text-color);
  margin: 0;
  letter-spacing: -0.04em; }

cite {
  display: block;
  text-align: left;
  font-style: normal;
  font-weight: normal;
  letter-spacing: 0em; }
  @media screen and (min-width: 1px) {
    cite {
      font-size: 14px;
      line-height: calc(20 / 14); } }

ol,
ul {
  margin-bottom: 1rem;
  padding-left: 1em; }
  ol li,
  ul li {
    margin-bottom: 1em;
    color: var(--text-color); }
    @media screen and (min-width: 1px) {
      ol li,
      ul li {
        font-size: 16px;
        line-height: calc(28 / 16); } }
    ol li ul,
    ol li ol,
    ul li ul,
    ul li ol {
      margin-left: 3rem;
      margin-bottom: 1rem; }
      ol li ul li,
      ol li ol li,
      ul li ul li,
      ul li ol li {
        margin-bottom: 1rem; }
      ol li ul li:last-child,
      ol li ol li:last-child,
      ul li ul li:last-child,
      ul li ol li:last-child {
        margin-bottom: 0; }
  ol li:last-child,
  ul li:last-child {
    margin-bottom: 0; }

div,
img {
  max-width: 100%; }

iframe {
  width: 100%; }

button {
  font-weight: bold;
  color: var(--text-color);
  background: none;
  border: none; }
  @media screen and (min-width: 1px) {
    button {
      font-size: 16px;
      line-height: calc(28 / 16); } }

figure {
  margin: 0; }

figcaption {
  color: var(--text-color); }
  @media screen and (min-width: 1px) {
    figcaption {
      font-size: 14px;
      line-height: calc(20 / 14); } }

input[type="search"] {
  width: 100%;
  padding: 5px 40px 5px 10px;
  height: 30px;
  border: 1px solid var(--text-color); }
  @media screen and (min-width: 513px) {
    input[type="search"] {
      width: 80%; } }
  @media screen and (min-width: 769px) {
    input[type="search"] {
      width: 30%; } }

td,
th {
  color: var(--text-color); }
  @media screen and (min-width: 1px) {
    td,
    th {
      font-size: 14px;
      line-height: calc(20 / 14); } }

:root {
  --nav-height: 3rem; }

main {
  margin-top: var(--nav-height); }

.grid {
  max-width: var(--max-width-site);
  margin: 0 2rem;
  padding: 30px 0; }
  @media screen and (min-width: 1121px) {
    .grid {
      margin: 0 auto; } }

.grid p {
  max-width: var(--max-width-content); }

.vertical-spacing {
  margin-top: 1rem; }

figure[data-type=quote] cite:before {
  content: "â€”"; }

[data-react-component='Nav'] {
  display: none; }

/* nav banner styles */
[data-react-component='Nav'] header {
  background-color: var(--pop-color);
  border-bottom-color: var(--pop-color); }

[data-react-component='Nav'] button,
[data-react-component='Nav'] button:hover,
[data-react-component='Nav'] h3,
[data-react-component='Nav'] h3 a,
[data-react-component='Nav'] h3 a:hover {
  color: var(--background-color); }

[data-react-component='Nav'] svg path {
  fill: var(--background-color); }

/* nav drawer styles */
[data-react-component='Nav'] header nav div:nth-child(2) {
  width: 528px; }

[data-react-component='Nav'] header nav div:nth-child(2) > ul > li {
  padding: 0 60px; }

[data-react-component='Nav'] ul li span {
  color: var(--pop-color);
  margin-bottom: 0.5rem; }

[data-react-component='Nav'] header nav div:nth-child(2) > ul > li > ul {
  margin-left: 0; }

[data-react-component='Nav'] header nav div:nth-child(2) > ul > li > ul > li {
  color: var(--text-color); }

[data-react-component='Nav'] header nav div:nth-child(2) > ul > li > ul > li > a {
  border-bottom: none; }

.policies-table__heading {
  color: var(--background-color);
  background-color: var(--pop-color);
  text-align: left;
  padding: 12px 10px;
  border-right: 1px solid var(--background-color); }

.policies-table__heading--policy {
  width: 60%; }

.policies-table__heading--category {
  width: 20%; }

.policies-table__heading--subcategory {
  width: 20%; }

.policies-table tbody tr {
  border-bottom: 1px solid var(--grey); }

.policies-table td {
  padding: 12px 10px; }

/*# sourceMappingURL=data:application/json;base64, */